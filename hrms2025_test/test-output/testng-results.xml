<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-30T16:01:20 JST" name="Default suite" finished-at="2025-07-30T16:01:27 JST" duration-ms="7176">
    <groups>
      <group name="sample">
        <method signature="SampleTest.sampleTest001()[pri:0, instance:scenario.SampleTest@77fbd92c]" name="sampleTest001" class="scenario.SampleTest"/>
      </group> <!-- sample -->
    </groups>
    <test started-at="2025-07-30T16:01:20 JST" name="Default test" finished-at="2025-07-30T16:01:27 JST" duration-ms="7176">
      <class name="scenario.SampleTest">
        <test-method is-config="true" signature="before()[pri:0, instance:scenario.SampleTest@77fbd92c]" started-at="2025-07-30T16:01:20 JST" name="before" finished-at="2025-07-30T16:01:23 JST" duration-ms="3441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="sampleTest001()[pri:0, instance:scenario.SampleTest@77fbd92c]" started-at="2025-07-30T16:01:23 JST" name="sampleTest001" finished-at="2025-07-30T16:01:26 JST" duration-ms="3431" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [従業員情報の登録が完了しました。] but found [ご指定のメールアドレスは既に使用されています。修正して再度操作してください。]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [従業員情報の登録が完了しました。] but found [ご指定のメールアドレスは既に使用されています。修正して再度操作してください。]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at scenario.TestBase.assertText(TestBase.java:67)
at scenario.TestBase.assertMessageBar(TestBase.java:143)
at scenario.SampleTest.sampleTest001(SampleTest.java:69)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleTest001 -->
        <test-method is-config="true" signature="after(org.testng.ITestResult)[pri:0, instance:scenario.SampleTest@77fbd92c]" started-at="2025-07-30T16:01:26 JST" name="after" finished-at="2025-07-30T16:01:27 JST" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sampleTest001 status=FAILURE method=SampleTest.sampleTest001()[pri:0, instance:scenario.SampleTest@77fbd92c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- scenario.SampleTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
